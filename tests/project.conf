subdirs=afl,honggfuzz,libfuzzer
targets=array,buffer,clint.log,config,coverage.log,error,event,fixme.log,includes,parser,pylint.log,string,variable,tests.log
cppflags_force=-I ../include
cflags=-W -Wall -g -O2 -fPIE -D_FORTIFY_SOURCE=2 -fstack-protector
ldflags_force=$(OBJDIR)../src/libSystem.a `../tools/platform.sh -O DESTDIR="$(DESTDIR)" -l dl` `../tools/platform.sh -O DESTDIR="$(DESTDIR)" -l m`
ldflags=-pie -Wl,-z,relro -Wl,-z,now
dist=Makefile,clint.sh,config.conf,config-empty.conf,config-noeol.conf,coverage.sh,fixme.sh,pkgconfig.sh,pylint.sh,python.sh,tests.sh,variable-samples/bool-false.var,variable-samples/bool-true.var,variable-samples/buffer-empty.var,variable-samples/double-zero.var,variable-samples/float-zero.var,variable-samples/int16_t-min.var,variable-samples/int32_t-min.var,variable-samples/int64_t-min.var,variable-samples/int8_t-min.var,variable-samples/null.var,variable-samples/string-empty.var,variable-samples/uint16_t-max.var,variable-samples/uint32_t-max.var,variable-samples/uint64_t-max.var,variable-samples/uint8_t-max.var

#targets
[array]
type=binary
sources=array.c

[buffer]
type=binary
sources=buffer.c

[clint.log]
type=script
script=./clint.sh
flags=-O CPPFLAGS="-I$(DESTDIR)$(PREFIX)/include -I../include `pkg-config --cflags python-2.7`"
enabled=0
depends=$(OBJDIR)../src/libSystem.a,clint.sh

[config]
type=binary
sources=config.c

[coverage.log]
type=script
script=./coverage.sh
enabled=0
depends=coverage.sh

[error]
type=binary
sources=error.c

[event]
type=binary
sources=event.c

[fixme.log]
type=script
script=./fixme.sh
enabled=0
depends=$(OBJDIR)../src/libSystem.a,fixme.sh

[includes]
type=binary
sources=includes.c

[parser]
type=binary
sources=parser.c

[pylint.log]
type=script
script=./pylint.sh
enabled=0
depends=../src/python/libSystem.py,pylint.sh

[string]
type=binary
sources=string.c

[tests.log]
type=script
script=./tests.sh
enabled=0
depends=$(OBJDIR)array$(EXEEXT),$(OBJDIR)buffer$(EXEEXT),$(OBJDIR)config$(EXEEXT),config.conf,config-noeol.conf,$(OBJDIR)error$(EXEEXT),$(OBJDIR)event$(EXEEXT),$(OBJDIR)includes$(EXEEXT),$(OBJDIR)parser$(EXEEXT),pkgconfig.sh,python.sh,$(OBJDIR)string$(EXEEXT),tests.sh,$(OBJDIR)variable$(EXEEXT),$(OBJDIR)../src/libSystem.a,../src/python/libSystem.c
enabled=0

[variable]
type=binary
sources=variable.c

#sources
[array.c]
depends=../src/array.c

[buffer.c]
depends=../src/buffer.c

[config.c]
depends=../src/config.c

[error.c]
depends=../src/error.c

[event.c]
depends=../src/event.c

[parser.c]
depends=../src/parser.c

[string.c]
depends=../src/string.c

[variable.c]
depends=../src/variable.c
